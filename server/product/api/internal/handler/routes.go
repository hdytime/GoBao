// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	commonProduct "GoBao/server/product/api/internal/handler/commonProduct"
	seckillProduct "GoBao/server/product/api/internal/handler/seckillProduct"
	storeProduct "GoBao/server/product/api/internal/handler/storeProduct"
	"GoBao/server/product/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/homepage/recommend",
				Handler: commonProduct.RecommendHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/homepage/research",
				Handler: commonProduct.SearchProductHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/product/detail",
				Handler: commonProduct.ProductDetailHandler(serverCtx),
			},
		},
		rest.WithPrefix("/product/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/seckill/detail",
				Handler: seckillProduct.SeckillDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/seckill/list",
				Handler: seckillProduct.SeckillListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/product/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/store/product",
				Handler: storeProduct.CreateProductHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/store/product",
				Handler: storeProduct.DeleteProductHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/product/v1"),
	)
}
