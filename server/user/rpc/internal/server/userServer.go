// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"GoBao/server/user/rpc/internal/logic"
	"GoBao/server/user/rpc/internal/svc"
	"GoBao/server/user/rpc/pb"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) GenerateToken(ctx context.Context, in *pb.GenerateTokenReq) (*pb.GenerateTokenResp, error) {
	l := logic.NewGenerateTokenLogic(ctx, s.svcCtx)
	return l.GenerateToken(in)
}

func (s *UserServer) Register(ctx context.Context, in *pb.RegisterReq) (*pb.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServer) Login(ctx context.Context, in *pb.LoginReq) (*pb.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServer) UserDetail(ctx context.Context, in *pb.UserDetailReq) (*pb.UserDetailResp, error) {
	l := logic.NewUserDetailLogic(ctx, s.svcCtx)
	return l.UserDetail(in)
}

func (s *UserServer) UpdateUserDetail(ctx context.Context, in *pb.UpdateUserDetailReq) (*pb.UpdateUserDetailResp, error) {
	l := logic.NewUpdateUserDetailLogic(ctx, s.svcCtx)
	return l.UpdateUserDetail(in)
}

func (s *UserServer) UpdateUserMoney(ctx context.Context, in *pb.UpdateUserMoneyReq) (*pb.UpdateUserMoneyResp, error) {
	l := logic.NewUpdateUserMoneyLogic(ctx, s.svcCtx)
	return l.UpdateUserMoney(in)
}
