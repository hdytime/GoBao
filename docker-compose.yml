version: '3.8'
# 网络配置
networks:
  gobao:
    driver: bridge # 设置网络模式

services:
#  user-api:
#    build:
#      context: .
#      dockerfile: ./server/user/api/Dockerfile
#    image: gobao:user-api
#    ports:
#      - "1001:1001"
#    networks:
#      - gobao
#
#  user-rpc:
#    build:
#      context: .
#      dockerfile: ./server/user/rpc/Dockerfile
#    image: gobao:user-rpc
#    ports:
#      - "2001:2001"
#    networks:
#      - gobao
  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - TZ=${TZ}
      - MYSQL_PASSWORD=123456              # 设置 Mysql 用户密码
      - MYSQL_ROOT_PASSWORD=123456    # 设置 Mysql root 用户密码
    restart: always
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
    networks:
      - gobao

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    container_name: redis
    restart: always
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    networks:
      - gobao

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    container_name: kafka

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    container_name: zookeeper

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    container_name: jaeger
    networks:
      - gobao

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    container_name: prometheus
    networks:
      - gobao

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    container_name: grafana
    networks:
      - gobao

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    container_name: elasticsearch
    networks:
      - gobao

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      - gobao

#  nginx:
#   image: nginx:latest
#   container_name: nginx
#   ports:
#    - "80:80"
#   volumes:
#    - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf

#  etcd:
#    image: bitnami/etcd:latest
#    container_name: etcd
#    environment:
#      - TZ=${TZ}
#      - ALLOW_NONE_AUTHENTICATION=yes
#      #- ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
#      - ETCD_ADVERTISE_CLIENT_URLS=http://127.0.0.1:2379
#    ports: # 设置端口映射 Etcd 服务映射宿主机端口号，可在宿主机127.0.0.1:2379访问
#      - "2379:2379"
#      #networks:
#      #- backend
#    restart: always
#    networks:
#    - gobao
#
#  etcdManage:
#    image: evildecay/etcdkeeper:latest
#    container_name: etcdManage
#    environment:
#      - TZ=${TZ}
#    ports:
#      - "7000:8080"                    # 设置容器8080端口映射指定宿主机端口，用于宿主机访问可视化web
#    depends_on: # 依赖容器
#      - etcd                                          # 在 etcd 服务容器启动后启动
##      networks:
##      - backend
#    restart: always
#    networks:
#      - gobao
#   depends_on:
#    - go_zero_service_name  # 替换为你的Go-zero微服务名称


